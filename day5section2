import sys

array2D = []

with open('order_rules.txt', 'r') as f:
        for line in f.readlines():
            array2D.append(line.strip().split('|'))

rulesDict = {}

## Load rules to dictionary. for every second number in the rule listing all the first numbers. 
for i in range(len(array2D)):

    if array2D[i][1] in rulesDict:
       rulesDict[array2D[i][1]][array2D[i][0]] = ''
    else:
       rulesDict[array2D[i][1]] = {}
       rulesDict[array2D[i][1]][array2D[i][0]] = ''


array2D = []

with open('input.txt', 'r') as f:
        for line in f.readlines():
            array2D.append(line.strip().split(','))


finalTotal = 0

## For every page, scan through rest of the pages in the record. For current page if any of the rest of the pages are found in rules dictionary, then 
## it is not in correct order.  this means any of the rest of the pages is not supposed to be after the current page. 
## The length all records are odd. Find the middle number of the correct order record, then keep summing up. 

## loop through the record for the current position until the current position is in order. 



for i in range(len(array2D)):

    currentRec = array2D[i]
    Fixed = False

    for j in range(len(currentRec)):
        correctOrder = False

        while not correctOrder:
            correctOrder = True

            for k in range(j+1,len(currentRec)):

                if currentRec[j] in rulesDict:

                   if currentRec[k] in rulesDict[currentRec[j]]:
                      Fixed = True
                      correctOrder = False
                      element = currentRec.pop(k)
                      currentRec.insert(j,element)
                      break


    if Fixed:
       position = int((len(currentRec)+1)/2-1)
       finalTotal += int(currentRec[position])
 
print("finalTotal:",finalTotal)
